<Application x:Class="GameRandomizer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:GameRandomizer"
             xmlns:ui="http://schemas.modernwpf.com/2019"
             StartupUri="LoadingWindow.xaml"
             ShutdownMode="OnExplicitShutdown">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:ThemeResources />
                <ui:XamlControlsResources />
            </ResourceDictionary.MergedDictionaries>
            <ResourceDictionary x:Key="LightTheme" Source="Dictionary1.xaml"/>
            <Style x:Key="AnimatedSwitch"
                   TargetType="{x:Type ToggleButton}">
                <Setter Property="Foreground"
                        Value="Black" />
                <Setter Property="Background"
                        Value="#FAFAFB" />
                <Setter Property="BorderBrush"
                        Value="#EAEAEB" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Viewbox Stretch="Uniform">
                                <Canvas Name="Layer_1"
                                        Width="30"
                                        Height="30"
                                        Canvas.Left="10"
                                        Canvas.Top="0">
                                    <Ellipse  Canvas.Left="0"
                                              Width="20"
                                              Height="20"
                                              Fill="{TemplateBinding Background}"
                                              Stroke="{TemplateBinding BorderBrush}"
                                              StrokeThickness="0.5" />
                                    <Ellipse  Canvas.Left="15"
                                              Width="20"
                                              Height="20"
                                              Fill="{TemplateBinding Background}"
                                              Stroke="{TemplateBinding BorderBrush}"
                                              StrokeThickness="0.5" />
                                    <Border Canvas.Left="10"
                                            Width="15"
                                            Height="20"
                                            Name="rect416927"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="0,0.5,0,0.5" />
                                    <Ellipse x:Name="ellipse"
                                             Canvas.Left="0"
                                             Width="20"
                                             Height="20"
                                             Fill="White"
                                             Stroke="{TemplateBinding BorderBrush}"
                                             StrokeThickness="0.3">
                                        <Ellipse.RenderTransform>
                                            <TranslateTransform X="0"
                                                                Y="0" />
                                        </Ellipse.RenderTransform>
                                        <Ellipse.BitmapEffect>
                                            <DropShadowBitmapEffect Softness="0.1"
                                                                    ShadowDepth="0.7"
                                                                    Direction="270"
                                                                    Color="#BBBBBB" />
                                        </Ellipse.BitmapEffect>
                                    </Ellipse>
                                </Canvas>
                            </Viewbox>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                                                To="#cc3fc3"
                                                                Duration="0:0:0.2" />
                                                <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                                                To="#9d3fcc"
                                                                Duration="0:0:0.2" />
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)"
                                                                               Storyboard.TargetName="ellipse">
                                                    <SplineDoubleKeyFrame KeyTime="0"
                                                                          Value="0" />
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.4"
                                                                          Value="15"
                                                                          KeySpline="0, 1, 0.6, 1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="Background.Color"
                                                                To="#FAFAFB"
                                                                Duration="0:0:0.2" />
                                                <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                                                To="#EAEAEB"
                                                                Duration="0:0:0.2" />
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)"
                                                                               Storyboard.TargetName="ellipse">
                                                    <SplineDoubleKeyFrame KeyTime="0"
                                                                          Value="15" />
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.3"
                                                                          Value="0"
                                                                          KeySpline="0, 0.5, 0.5, 1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="WindowStyle"
                   TargetType="Window">
                <Style.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <!--Триггер при открытие окна-->
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                     From="0"
                                                     To="1"
                                                     Duration="0:0:1" />
                                    <!--Duration менять время анимации, From (от значения) To (до значения)-->
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="RoundProgressBarStyle"
                   TargetType="{x:Type ProgressBar}"
                   xmlns:sys="clr-namespace:System;assembly=mscorlib">
                <Style.Resources>
                    <local:RoundProgressPathConverter x:Key="Conv" />
                    <!-- нам понадобится пара констант -->
                    <!-- доля рабиуса для внутренней части -->
                    <sys:Double x:Key="RelativeThickness">0.75</sys:Double>
                    <!-- просто 0 -->
                    <sys:Double x:Key="Zero">0.0</sys:Double>
                    <!-- просто 1 -->
                    <sys:Double x:Key="One">1.0</sys:Double>
                    <!-- какой процент рисовать для неопределённого состояния -->
                    <sys:Double x:Key="IndeterminatePart">0.25</sys:Double>
                    <!-- обычно прогресс по умолчанию зелёный -->
                    <SolidColorBrush x:Key="ProgressBar.Progress"
                                     Color="#FF06B025" />
                    <!-- стандартный фон -->
                    <SolidColorBrush x:Key="ProgressBar.Background"
                                     Color="#FFE6E6E6" />
                    <!-- стандартный цвет границы -->
                    <SolidColorBrush x:Key="ProgressBar.Border"
                                     Color="#FFBCBCBC" />
                </Style.Resources>
                <Setter Property="Foreground"
                        Value="{StaticResource ProgressBar.Progress}" />
                <Setter Property="Background"
                        Value="{StaticResource ProgressBar.Background}" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource ProgressBar.Border}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <Grid x:Name="TemplateRoot">
                                <!-- в неопределённом состоянии запускаем вращающуюся анимацию -->
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Determinate" />
                                        <VisualState x:Name="Indeterminate">
                                            <Storyboard RepeatBehavior="Forever">
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                                 Storyboard.TargetName="Animation"
                                                                 From="0"
                                                                 To="360"
                                                                 Duration="0:0:2" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <!-- это фон, красим его в цвет фона-->
                                <Path Fill="{TemplateBinding Background}"
                                      Stretch="Uniform"
                                      Stroke="{TemplateBinding BorderBrush}"
                                      StrokeThickness="{TemplateBinding BorderThickness}">
                                    <Path.Data>
                                        <MultiBinding Converter="{StaticResource Conv}"
                                                      ConverterParameter="{StaticResource RelativeThickness}">
                                            <!-- val=1, min=0, max=1 даёт полный круг -->
                                            <Binding Source="{StaticResource One}" />
                                            <Binding Source="{StaticResource Zero}" />
                                            <Binding Source="{StaticResource One}" />
                                        </MultiBinding>
                                    </Path.Data>
                                </Path>
                                <Path Fill="{TemplateBinding Foreground}"
                                      Stretch="Uniform"
                                      Name="Indicator">
                                    <Path.Data>
                                        <MultiBinding Converter="{StaticResource Conv}"
                                                      ConverterParameter="{StaticResource RelativeThickness}">
                                            <Binding Path="Value"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="Minimum"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="Maximum"
                                                     RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </Path.Data>
                                </Path>
                                <!-- это анимировнная штука, будет показываться в неопределённом состоянии -->
                                <Path Fill="{TemplateBinding Foreground}"
                                      Stretch="Uniform"
                                      Name="Animation"
                                      Visibility="Collapsed"
                                      RenderTransformOrigin="0.5,0.5">
                                    <Path.Data>
                                        <MultiBinding Converter="{StaticResource Conv}"
                                                      ConverterParameter="{StaticResource RelativeThickness}">
                                            <Binding Source="{StaticResource IndeterminatePart}" />
                                            <Binding Source="{StaticResource Zero}" />
                                            <Binding Source="{StaticResource One}" />
                                        </MultiBinding>
                                    </Path.Data>
                                    <!-- положим пустое вращение, чтобы к нему цеплялась анимация -->
                                    <Path.RenderTransform>
                                        <RotateTransform />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!-- в случае неопределённого состояния уберём нормальный индикатор и покажем анимацию -->
                                <Trigger Property="IsIndeterminate"
                                         Value="true">
                                    <Setter Property="Visibility"
                                            TargetName="Indicator"
                                            Value="Collapsed" />
                                    <Setter Property="Visibility"
                                            TargetName="Animation"
                                            Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
